version: '3.3'
services:
  dbserver:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distribuida
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - "c:/distribuida:/var/lib/postgresql/data"
    ports:
      - "1000:5432"
    expose:
      - 1000
  consul:
    image: consul:1.15.4
    command: |
      agent -dev
       -ui
       -bind=0.0.0.0
       -client=0.0.0.0
    ports:
      - "8500:8500"
    expose:
      - 8500
  proxy:
    image: traefik:3.0.4
    command:
      --api.insecure=true 
      --providers.consulCatalog
      --providers.consulCatalog.exposedByDefault=false
      --providers.consulCatalog.endpoint.address=consul:8500
      --providers.consulCatalog.refreshInterval=10s
    ports:
      - "8080:8080"
      - "7070:80"
    expose:
      - 80
    depends_on:
      - consul
  authors-service:
    image: app_authors
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://dbserver:5432/distribuida
      QUARKUS_HTTP_PORT: 8080
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
#    ports:
#     - "8080:8080"
    depends_on:
      - dbserver
      - consul
    deploy:
      replicas: 2
  books-service:
    image: app_books
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://dbserver:5432/distribuida
      QUARKUS_HTTP_PORT: 8080
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    #    ports:
    #     - "8080:8080"
    depends_on:
      - dbserver
      - consul
    deploy:
      replicas: 1